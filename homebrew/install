#!/bin/sh
#
# Homebrew
#
# This installs and updates some of the common dependencies needed (or at least desired)
# using Homebrew and Caskroom

# @todo create a skip list for casks that fail (because maybe they were already installed). Don't want to keep trying to install them

# Default Homebrew packages to install
# Add new ones here

# @TODO create loop to ask about installing each pkg
# @TODO create questio to ask if you want to review each pkg?

DEFAULT_PKGS=(
	bash 
	bash-completion
	bat
	brew-cask-completion
	colordiff
	coreutils
	diffutils
	duti
	fd
	ffmpeg
	fzf
	gawk
	git
	mas
	moreutils
	mysql
	ncdu
	nvie/tap/git-toolbelt
	rsync
	the_silver_searcher
	wget
	wp-cli
	wp-cli-completion
	zsh 
)

# Default Caskroom packages to install
# Add new ones here
DEFAULT_CASKS=(
	#1password	# New version requires subscription
	acorn
	atom
	bbedit
	#brackets	# No longer using
	dropbox	
	firefox 
	google-chrome 
	handbrake 
	imageoptim 
	name-mangler
	quicksilver 
	qlcolorcode 
	quicklook-csv 
	quicklook-json 
	qlmarkdown 
	sequel-pro 
	sketch 
	superduper
	#sqlitebrowser # not available
	textmate 
	transmit 
	virtualbox 
	virtualbox-extension-pack
	vlc
)


# Interaction functions
export TXT_NC=$(tput sgr 0)
export TXT_bold=$(tput bold)
export TXT_blue=$(tput setaf 33)
export TXT_green=$(tput setaf 64)
export TXT_orange=$(tput setaf 166)
export TXT_red=$(tput setaf 124)
export TXT_yellow=$(tput setaf 136)


# Interaction functions
msg_info () {
  printf "\r  ${TXT_bold}${TXT_blue}[ ... ]${TXT_NC} $1\n"
}

msg_user () {
  printf "\r  ${TXT_bold}${TXT_orange}[ ? ]${TXT_NC} $1 "
}

msg_success () {
  printf "\r  ${TXT_bold}${TXT_green}[ OK ]${TXT_NC} $1\n"
}

msg_warn () {
  printf "\r  ${TXT_bold}${TXT_yellow}[ WARNING ]${TXT_NC} $1\n"
}

msg_error () {
  printf "\r  ${TXT_bold}${TXT_red}[ ERROR ]${TXT_NC} $1\n"
}

msg_fail () {
  printf "\r  ${TXT_bold}${TXT_red}[ FAIL ]${TXT_NC} $1\n"
  echo ''
  exit
}


# Helper
contains() {
	[[ $1 =~ (^|[[:space:]])"$2"($|[[:space:]]) ]] && return 0  || return 1
}



# Install homebrew
install_homebrew() {
	# Install or update
	if test $(which brew)
	then
		msg_info "Updating Homebrew for you..."
		brew update
	else
		msg_info "Installing Homebrew for you..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    #ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
	fi



	# Check to make sure we have all default brew packages
	installed_pkgs=$(brew list --formula)
	install_list=()


	# Tap when necessary
	if  ! $(brew tap | grep -lq "nvie/tap")
	then
		msg_info "Tapping nvie/tap"
		brew tap nvie/tap
		
	fi


	# build list of packages to install
	for pkg in "${DEFAULT_PKGS[@]}"
	do
		contains "$installed_pkgs" $pkg
		if [[ "$?" -eq 1 ]] 
		then 
			#msg_info "$pkg added to install list"
			install_list+=("$pkg")
		else
			msg_info "$pkg already installed"
		fi
	done

	# Install homebrew packages
	if [ ${#install_list[@]} -eq 0 ]
	then 
		msg_success "All default Homebrew packages are already installed"
	else
		msg_info "Installing the following Homebrew packages for you: ${install_list[@]}"
		brew install ${install_list[@]}
	fi
}



# Install caskroom
install_caskroom() {
	local install=false
	local name="Caskroom"

	if  ! $(brew tap | grep -lq "homebrew/cask")
	then
		msg_info "Tapping Caskroom"
		brew tap homebrew/cask
	fi


	echo ""
	msg_warn "This part installs a bunch of default apps from Homebrew Caskroom.\n \
	      It probably won't work correctly if you've already installed some of the apps.\n"
	msg_user "Install ${name}?: \n [y]es, [n]o?"
	read -n 1 action

	case "$action" in
		y | Y )
			install=true;;
		n | N )
			install=false;;
		* )
		;;
	esac
	
  
	if [ "$install" == "true" ]
	then
		# Check to make sure we have all default casks
		installed_casks=$(brew cask list)
		install_cask_list=()


		# build list of casks to install
		for pkg in "${DEFAULT_CASKS[@]}"
		do
			contains "$installed_casks" $pkg
			if [[ "$?" -eq 1 ]]	
			then 
				#msg_info "$pkg added to install list"
				install_cask_list+=("$pkg");
			else
				msg_info "$pkg already installed"
			fi
		done
	
		
		# Install caskroom packages
		if [ ${#install_cask_list[@]} -eq 0 ]
		then 
			msg_success "All default Caskroom packages already installed"
		else
			msg_info "Installing the following Caskroom packages for you: ${install_cask_list[@]}"
			brew cask install ${install_cask_list[@]}
		fi
		
	else
      msg_success "Skipped ${name}"
	fi
}


install_optional_casks() {
	local install=false
	local name="Optional Casks"

	echo ""
	msg_user "Review ${name}?: \n\
	[y]es, [n]o?"
	read -n 1 action

	case "$action" in
		y | Y )
			install=true;;
		n | N )
			install=false;;
		* )
		;;
	esac

	if [ "$install" == "true" ]
	then
		$DOTS/homebrew/install-optional-casks
	else
      msg_success "Skipped ${name}"
	fi
}


install_homebrew
install_caskroom
install_optional_casks


exit 0
